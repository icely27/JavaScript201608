URL 统一资源定位符
标识该资源在整个互联网上的唯一位置.
http://www.zhufengpeixun.com/customize/node/index.html?a=1&b=2

https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=0&rsv_idx=1&tn=baidu&wd=%E7%8F%A0%E5%B3%B0%E5%9F%B9%E8%AE%AD&rsv_pq=9deff35800010df7&rsv_t=7422ryORtll0IeOJRu5Z6ozpM%2BXJb%2BhYLjOhUAqs%2FEroqr3cmMcwrT8rBUE&rqlang=cn&rsv_enter=1&rsv_sug3=12&rsv_sug1=9&rsv_sug7=100

https://www.baidu.com/s?a=1&wd=zhufengpeixun

URL格式为:
<方案>://<用户名>:<密码>@<域名>:<端口>/<请求路径>?<请求参数>#<锚点>

名词解释
方案: 浏览器请求该URL使用什么协议去请求.默认为http协议
端口: 端口为非必填,如果没有填则根据当前URL的方案选择默认端口
默认端口:http协议默认端口为80 https默认端口为443 ftp默认端口为21
请求参数: 该请求的附加查询条件,查询条件由服务器指定.

1 输入URL
2 浏览器对URL进行标准化
3 DNS解析 把域名解析成一个ip的过程就叫DNS解析 DNS=domain naming service
4 使用 ip+port 通过tcp协议连接服务器
5 发送请求
6 等待响应
7 接收响应
8 完成 断开连接

请求和响应

http协议
超文本传输协议.
负责连接并传输http客户端和服务器端之间的数据.

重要性:
web流量 http/https协议的比重占90%.
ajax就是通过内部操作http协议来完成整个逻辑.

http协议特点:
它是一个简单事务.
事务:事务包含n+1个事件,只有包含所有事件全部完成之后,该事务才算完成,否则事务失败.


银行转账
1 从我的银行卡里扣钱
2 给小明的银行卡加钱
只要步骤1和2任何一个没有成功,则转账失败.那么我们可以把转账称为一个简单事务

特点1 http协议包含两个事件:请求(request)和响应(response)
特点2 http协议是无状态的.只能使用一次.成功完成一次简单事物该http协议将被废弃.

请求(发送给服务器)和响应(发送给http客户端)的内容统称为报文.

请求和响应的报文分为三部分
1 起始行 该请求或响应的基本信息 (请求的地址 , 服务器响应的状态码)
2 首部 请求或相应的摘要信息
3 主体 请求或响应的数据

请求报文
起始行
1 http方法 使用指定的http方法进行http协议请求
2 请求地址 请求的服务器地址 URL
3 http版本号(最常见为1.1) 0.9 1.0 1.1 2.0
首部
cookie 保持登录态
主体
用来放置发送给服务器的数据.

响应报文
起始行
1 http版本号 和请求的http版本号一一对应
2 http状态码 标识服务器对该请求的处理结果,成功为200
3 http状态码描述符 对状态码进行描述. 200后面跟的是OK  404后面跟的是NOT FOUND
首部
date 处理该请求时服务器时间,格式为世界标准时.见秒杀
content-length 标识响应内容的大小,但是为bytes,见迅雷下载
主体
服务器响应浏览器的数据

http方法:
指定http方法来进行请求.

GET 从服务器获取资源
POST 往服务器发送资源
PUT 往服务器推送资源(和post只有一点不同)
HEAD 从服务器获取资源,但是响应报文只需返回起始行和首部,不需要返回主体.
DELETE 告诉服务器删除某个资源

OPTIONS 检验服务器支持哪些http方法(该http方法不常用)

特点:
GET
1 因为get方法是从服务器获取资源,所以不需要请求主体.
2 get方法的请求 容易被缓存
3 get方法的请求,存在大小限制.(因为get方法没有请求主体,所以必须把给服务器发送的参数放到URL请求参数中,这样就会造成URL的长度增加.然而浏览器对URL的长度是有大小限制的,所以get方法的请求有大小限制.IE 2k chrome 8k firefox 7k)
4 明文发送内容(因为GET请求把发送的数据放到URL中,而URL是可见的,所以是明文发送)

POST
1 因为POST方法是往服务器发送数据,所以存在请求主体.
2 永远不会被缓存
3 没有大小限制(POST请求可以将发送的数据放入请求主体中,也可以像GET方法那样放到URL中.由于请求主体的存在,所以主要将发送的数据放入请求主体中,一些用来过滤的参数放入URL中.然而浏览器对请求主体是不做大小限制的.所以POST方法没有大小限制.)
4 可以不是明文发送(请求主体是看不见的,所以不是明文发送)

PUT
和上面POST的四个特点一模一样,只有"幂等性"不一样.(暂时可以理解为POST和PUT方法一样)

DELETE
和上面的GET方法的特点一模一样.

HEAD
和上面的GET方法特点一模一样.
既没有请求主体也没有响应主体.

为什么需要存在这5个方法?
固定的http方法处理固定的逻辑

CURD(增删改查)

假设 现在有一个处理用户信息的接口 /userInfo

增加用户
post {name:'zhangsan',age:18} /userInfo

删除用户(删除id为1的用户)
delete  /userInfo?id=1

修改用户(修改id为1的用户名为lisi)
put {name:'lisi',age:18} /userInfo?id=1

查询用户(查询所有用户)
get /userInfo
查询id为1的用户
get /userInfo?id=1

上面5个http主要分两类 get系(get delete head) post系(post put)

get系方法和post系方法的区别:
1 get系方法容易被浏览器缓存(304缓存和强缓存),而post系方法则永远不会被浏览器缓存
2 get系方法有大小限制(最大为2k),而post系没有大小限制
3 get系方法没有请求主体,而post系方法有请求主体.

http状态码
标识服务器对该请求处理的状态,使用3个数字来表示.

1xx http协议正在初始化
101 切换协议 html5的websocket在使用该状态码 从http协议切换为ws协议

2xx 标识客户端请求成功
200 成功
202 服务器接受该请求

3xx 重定向和缓存
301和302的目的就是站点跳转
301 永久转移 站点之间跳转
302 临时转移 站点之间或同一站点之间跳转

301和302的区别表现在搜索引擎权重上.网站返回301会降低搜索引擎对该网站的权重.导致通过搜索引擎不能很好的搜到该网站.(对SEO的影响比较大)

304 请求的资源未发生改变
处理浏览器对静态资源的缓存.
涉及到两个响应首部和两个请求首部
响应首部
last-modified 该静态资源最后一次修改的时间
etag 该静态资源内容的摘要值
请求首部
if-modified-since 和上一次响应的last-modified对应
if-none-match 和上一次响应的etag对应

缓存分为两种 304缓存 强缓存
强缓存:浏览器发现当前请求的静态资源之前被标记过强缓存时,不会发送http请求,直接使用缓存的内容.涉及到两个响应首部 expire(该静态资源过期时间,单位为秒) cache-control(设置过期时间,单位为世界标准时)

304缓存和强缓存的区别:
强缓存:当前页面需要使用某个静态资源时,会先判断该静态资源是否被标记过强缓存,如果静态资源命中强缓存,不会发起新的http请求.直接让当前页面使用浏览器缓存的内容.
304缓存:当前页面需要使用某静态资源时,会先发起http请求,服务器收到页面对该静态资源的请求时,会先校验该静态资源是否已经被修改,如果没有被修改则返回304让浏览器直接使用缓存的内容.要是被修改过则返回200,并且加上响应首部last-modified或etag让浏览器缓存本次响应的内容.
总结:强缓存不会发起http请求,而304会发起http请求.


4xx 客户端请求失败
400 错误的请求 (URL的方案和端口或者http方法错误,缺少请求参数,URL长度超过服务器限制)
401 未认证 ( 未登录该站点 )
403 禁止访问 (没有访问权限)
404 资源未找到

5xx 服务器处理失败
500 服务器内部错误

MIME Type
多用途因特网右键扩展
作用:标识请求或响应数据的类型

通过HTTP协议通用首部Content-Type来标识.

文件对应的MIME类型
html text/html
css text/css
js text/javascript application/x-javascript
png image/png
gif image/gif
jpg image/jpeg
json application/json
表单提交(表单提交时有一个特殊的Content-Type.只有服务器收到该特殊的Content-Type时才认为是表单提交,否则不算.) application/x-www-form-urlencoded

浏览器根据服务器响应的首部Content-Type来解析内容.

MIME Type格式是固定的
父类型/子类型






